> 第31次CCF计算机软件能力认证

> 模拟认证CSP（）

> 模拟认证AcWing（）

# Q1 坐标变换（其一）
## 算法思路
```C++

```

# Q2 坐标变换（其二）
## 算法思路
```C++

```

# Q3 梯度求解
## 算法思路
- 输入处理：从标准输入中读取一行字符串，然后将该字符串解析为单词（以空格为分隔符）。
- 对于任意的一个乘积项使用`vector<int> f`类型存储数据，乘积项的存储大小为 n + 1（n 为变量的个数）
- 其中`f[0]`表示该乘积项的系数，`f[i]`表示变量 $x_i$ 的次数值
- 对于任意的一个多项式即为乘积项的一维数组，使用`vector<vector<int>> formula`的类型存储数据
- 根据读入的后缀表达式，每一次的栈操作便是多项式层面的计算
- 多项式的加法，将两个多项式的乘积项叠加即可
- 多项式的减法，将后一个多项式的每一个乘积项的系数变成相反数，再进行多项式的加法即可
- 多项式的乘法，一个双层的`for`循环，两个多项式的乘积项两两相乘，乘积项相乘时，系数相乘，变量的次数值累加
- 多项式的求偏导，记偏导变量角标为`i`，所有乘积项`f`中的系数乘`f[i]`，之后`f[i]`自减 1
- 多项式的偏导求值，带入每一个变量的具体值即可

## 输入处理注解
- `cin.get()`用于读取一个字符（在此处是回车符）并丢弃它，清除之前输入的缓存区
- `getline(cin, formula)`使用`getline()`函数从标准输入中读取一行字符串，并将其存储到`string`类型的`formula`中
- `stringstream oss(formula)`创建名为`oss`的字符串流，并将刚刚读取的`formula`字符串作为其输入
- `while (oss >> str) {}`利用循环，会不断从字符串流中读取单词，直到流中没有内容为止
```C++

```

# Q4 阴阳龙
## 算法思路
```C++

```